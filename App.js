import { StyleSheet, Text, View, StatusBar, Button } from 'react-native';

/* Importando TODOS os recursos para notifica√ß√£o  */
import * as Notifications from "expo-notifications";

import { useState, useEffect } from 'react';

/* Manipulador de eventos de notifica√ß√µes */
Notifications.setNotificationHandler({
  handleNotification: async () => {
    return {
      shouldShowAlert: true,
      shouldPlaySound: true,
      shouldSetBadge: true,
    };
  },
});

export default function App() {
  const [dados, setDados] = useState(null);

  useEffect(() => {
    /* Verifica√ß√µes/configura√ß√µes de permiss√µes de notifica√ß√£o
    exclusivas para iOS */
    async function permissoesIos() {
      return await Notifications.requestPermissionsAsync({
        ios: {
          allowAlert: true,
          allowSound: true,
          allowBadge: true,
        }
      })
    }
    permissoesIos();

    /* Ouvindo de evento para notifica√ß√µes recebidas, ou seja, quando a notifica√ß√£o
    aparece no topo do app. */
    Notifications.addNotificationReceivedListener(notificacao => {
      console.log(notificacao);
    });

    /* Ouvinte de evento para as respostas dadas √†s notifica√ß√µes, 
    ou seja, quando o usu√°rio interage (toca) notifiac√ß√£o. */
    Notifications.addNotificationResponseReceivedListener((resposta) => {
      setDados(resposta.notification.request.content.data);
    })
  }, [])
  const enviarMensagem = async () => {
    /* Montando a mensagem que ser√° enviada via sistema de notifica√ß√£o LOCAL */
    const mensagem = {
      title: "Lembrete! üòõ",
      body: "N√£o se esque√ßa de estudar muito... sen√£o, reprova! üòà",
      data: {
        usuario: "Chapolin Colorado",
        cidade: "S√£o Paulo"
      }
    }

    /* Fun√ß√£o de agendamento de notifica√µes */
    await Notifications.scheduleNotificationAsync({
      // Conteudo da notifica√ß√£o
      content: mensagem,

      // acionador/disparador da notifica√ß√£o
      trigger: { seconds: 5 },
    })
  };
  return (
    <>
      <StatusBar style="auto" />
      <View style={styles.container}>
        <Text>Exemplo de Notifica√ß√µes!</Text>
        <Button title='Disparar Notifica√ß√µes' onPress={enviarMensagem} />

        {dados && (
          <View style={{ marginVertical: 8, backgroundColor: "yellow" }}>
            <Text>Usuario: {dados.usuario} </Text>
            <Text>Cidade: {dados.cidade} </Text>
          </View>
        )}
      </View>
    </>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
    alignItems: 'center',
    justifyContent: 'center',
  },
});
